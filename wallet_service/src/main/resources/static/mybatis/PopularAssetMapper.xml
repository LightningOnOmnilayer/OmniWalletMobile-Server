<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
【平台推广资产列表】对象关系映射 配置
 @author AutoCode 309444359@qq.com
 @date 2019-04-26 16:50:49
 -->
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.lx.server.dao.PopularAssetDao">

	<resultMap id="popularAssetResultMap" type="com.lx.server.pojo.PopularAsset">
		<id property="id" column="id" />
				<result property="assetId" column="asset_id" />
				<result property="assetName" column="asset_name" />
				<result property="createTime" column="create_time" />
				<result property="createBy" column="create_by" />
	</resultMap>
	<resultMap id="mapResultMap"  type="java.util.HashMap" extends="popularAssetResultMap"></resultMap>
	<resultMap id="pageResultMap"  type="java.util.HashMap" extends="popularAssetResultMap"></resultMap>


	<insert id="insert" parameterType="com.lx.server.pojo.PopularAsset" useGeneratedKeys="true" keyProperty="id" >
	   insert into t_popular_asset (
	    <include refid="columns" />
	   )values (
	     #{id},
	     #{assetId},
	     #{assetName},
	     #{createTime},
	     #{createBy}
	   )
	</insert>

	<update id="update" parameterType="com.lx.server.pojo.PopularAsset">
		update t_popular_asset
		<set>
		<if test="assetId != null">
			asset_id=#{assetId},
		</if>
		<if test="assetName != null">
			asset_name=#{assetName},
		</if>
		<if test="createTime != null">
			create_time=#{createTime},
		</if>
		<if test="createBy != null">
			create_by=#{createBy},
		</if>
		</set>
		<where>
			1=1
			<if test="id != null">
				and id=#{id}
			</if>
			<if test="n_assetId != null">
				and asset_id=#{n_assetId}
			</if>
			<if test="n_assetName != null">
				and asset_name=#{n_assetName}
			</if>
			<if test="n_createTime != null">
				and create_time=#{n_createTime}
			</if>
			<if test="n_createBy != null">
				and create_by=#{n_createBy}
			</if>
		</where>
	</update>

	<delete id="delete" parameterType="map">
	   delete from
	     t_popular_asset
	   	where 
	    id=#{id}
	</delete>

	<select id="selectObject" parameterType="map" resultMap="popularAssetResultMap">
	   select
	<include refid="columns" />
	   from t_popular_asset
	   where
	    id=#{id}
	</select>

	<select id="selectObjectList" parameterType="map" resultMap="popularAssetResultMap">
	   select
	<include refid="columns" />
	   from t_popular_asset
	   <where>
	 <include refid="normalCondition"/>
	   </where>
	</select>

	<select id="selectMap" parameterType="map" resultMap="mapResultMap">
	   select
	<include refid="columns" />
	   from t_popular_asset
	   where
	    id=#{id}
	</select>

	<select id="selectMapList" parameterType="map" resultMap="mapResultMap">
	   select
	<include refid="columns" />
	   from t_popular_asset
	   <where>
	   <include refid="normalCondition"/>
	   </where>
	</select>

	<select id="page" parameterType="map" resultMap="pageResultMap">
	   select
	<include refid="columns" />
	<include refid="pageCondition" />
	limit #{offset},#{rows}
	</select>

	<select id="pageBean" parameterType="map" resultMap="popularAssetResultMap">
	   select
	<include refid="columns" />
	<include refid="pageCondition" />
	limit #{offset},#{rows}
	</select>
	
	<select id="pageCount" parameterType="map" resultType="int">
	   select count(1)
	   <include refid="pageCondition" />
	</select>

	<sql id="pageCondition">
	   from t_popular_asset
	   <where>
			<include refid="normalCondition"/>
	   </where>
	</sql>

	<sql id="normalCondition">
		1=1
		<if test="id != null">
			and id=#{id}
		</if>
		<if test="assetId != null">
			and asset_id=#{assetId}
		</if>
		<if test="assetName != null">
			and asset_name=#{assetName}
		</if>
		<if test="createTime != null">
			and create_time=#{createTime}
		</if>
		<if test="createBy != null">
			and create_by=#{createBy}
		</if>
		<if test="keyword != null">
			and (name LIKE CONCAT("%", #{keyword}, "%") )
		</if>
		order by  id  desc 
	</sql>
	<sql id="columns">
			id,
			asset_id,
			asset_name,
			create_time,
			create_by
	</sql>
</mapper>
