#解决同一个tomcat运行多个springboot工程的问题
spring.jmx.enabled=false

server.port=8080

config.debug=true


#token配置
jwt.secret=P@ssw)2d!UPRETSCLIENT
jwt.tokenHead=Bearer 
jwt.header=authorization
#jwt.expiration=604800
jwt.expiration=60

site.upload.path=/opt/tomcat/webapps
site.media.url=http://62.234.169.68:8080/

url.base.hyperledger=http://39.106.198.227:8888/

#pro test dev
config.runMode=pro
config.runMode=test
config.runMode=dev

#JDBC
spring.datasource.url=jdbc:mysql://62.234.169.68:3306/wallet?characterEncoding=utf8&useSSL=false&allowMultiQueries=true
spring.datasource.url=jdbc:mysql://62.234.169.68:3306/wallet_test?characterEncoding=utf8&useSSL=false&allowMultiQueries=true
spring.datasource.url=jdbc:mysql://62.234.169.68:3306/wallet_dev?characterEncoding=utf8&useSSL=false&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=1M8x8G1S5J
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#连接池
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=20

#MyBatis
#mybatis.config-locations=classpath:mybatis/mybatis-config.xml
#查询返回结果含null没有对应字段值
mybatis.configuration.callSettersOnNulls=true
mybatis.configuration.cacheEnabled=true
mybatis.configuration.lazyLoadingEnabled=true
#允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动）。 系统默认值是true，设置只是为了展示出来
mybatis.configuration.multipleResultSetsEnabled=true
#使用列标签代替列名。不同的驱动在这方便表现不同。参考驱动文档或充分测试两种方法来决定所使用的驱动。 系统默认值是true，设置只是为了展示出来
mybatis.configuration.useColumnLabel=true
#允许 JDBC 支持生成的键。需要适合的驱动。如果设置为 true 则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如Derby）。 系统默认值是false，设置只是为了展示出来
mybatis.configuration.useGeneratedKeys=false
#配置默认的执行器。SIMPLE 执行器没有什么特别之处。REUSE 执行器重用预处理语句。BATCH 执行器重用语句和批量更新 系统默认值是SIMPLE，设置只是为了展示出来
mybatis.configuration.defaultExecutorType=SIMPLE
#设置超时时间，它决定驱动等待一个数据库响应的时间。 系统默认值是null，设置只是为了展示出来
mybatis.configuration.defaultStatementTimeout=36000
mybatis.mapper-locations=classpath:static/mybatis/*.xml


spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.resolve-lazily=false
#spring.servlet.multipart.maxFileSize=30MB
#spring.servlet.multipart.maxRequestSize=30MB

# kafka
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=62.234.169.68:9092
spring.kafka.consumer.group-id=user-log-group
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


logging.pattern.console = %d{yyyy-mm-dd HH:mm:ss} %logger{5} [%method:%line] - %msg%n
logging.level.org.springframework.boot.autoconfigure=ERROR